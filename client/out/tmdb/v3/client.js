"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const proxy_1 = require("./proxy");
class TmdbV3Client {
    constructor() {
        this.proxy = new proxy_1.TmdbV3Proxy();
    }
    get base_url() { return this.proxy.base_url; }
    set base_url(value) { this.proxy.base_url = value; }
    get api_key() { return this.proxy.api_key; }
    set api_key(value) { this.proxy.api_key = value; }
    getApiConfiguration(req) { return this.proxy.invoke(t => t.getApiConfiguration(req)); }
    searchMovies(req) { return this.proxy.invoke(t => t.searchMovies(req)); }
    searchTvShows(req) { return this.proxy.invoke(t => t.searchTvShows(req)); }
    movieGetPopular(req) { return this.proxy.invoke(t => t.movieGetPopular(req)); }
    tvGetDetails(req) { return this.proxy.invoke(t => t.tvGetDetails(req)); }
    searchMulti(req) { return this.proxy.invoke(t => t.searchMulti(req)); }
    accountAddtoWatchlist(req) { return this.proxy.invoke(t => t.accountAddtoWatchlist(req)); }
    accountGetCreatedLists(req) { return this.proxy.invoke(t => t.accountGetCreatedLists(req)); }
    accountGetDetails(req) { return this.proxy.invoke(t => t.accountGetDetails(req)); }
    accountGetFavoriteMovies(req) { return this.proxy.invoke(t => t.accountGetFavoriteMovies(req)); }
    accountGetFavoriteTVShows(req) { return this.proxy.invoke(t => t.accountGetFavoriteTVShows(req)); }
    accountGetMovieWatchlist(req) { return this.proxy.invoke(t => t.accountGetMovieWatchlist(req)); }
    accountGetRatedMovies(req) { return this.proxy.invoke(t => t.accountGetRatedMovies(req)); }
    accountGetRatedTVEpisodes(req) { return this.proxy.invoke(t => t.accountGetRatedTVEpisodes(req)); }
    accountGetRatedTVShows(req) { return this.proxy.invoke(t => t.accountGetRatedTVShows(req)); }
    accountGetTVShowWatchlist(req) { return this.proxy.invoke(t => t.accountGetTVShowWatchlist(req)); }
    accountMarkasFavorite(req) { return this.proxy.invoke(t => t.accountMarkasFavorite(req)); }
    authenticationCreateGuestSession(req) { return this.proxy.invoke(t => t.authenticationCreateGuestSession(req)); }
    authenticationCreateRequestToken(req) { return this.proxy.invoke(t => t.authenticationCreateRequestToken(req)); }
    authenticationCreateSession(req) { return this.proxy.invoke(t => t.authenticationCreateSession(req)); }
    authenticationValidateRequestToken(req) { return this.proxy.invoke(t => t.authenticationValidateRequestToken(req)); }
    certificationGetMovieCertifications(req) { return this.proxy.invoke(t => t.certificationGetMovieCertifications(req)); }
    certificationGetTVCertifications(req) { return this.proxy.invoke(t => t.certificationGetTVCertifications(req)); }
    collectionGetDetails(req) { return this.proxy.invoke(t => t.collectionGetDetails(req)); }
    collectionGetImages(req) { return this.proxy.invoke(t => t.collectionGetImages(req)); }
    companyGetDetails(req) { return this.proxy.invoke(t => t.companyGetDetails(req)); }
    companyGetMovies(req) { return this.proxy.invoke(t => t.companyGetMovies(req)); }
    creditGetDetails(req) { return this.proxy.invoke(t => t.creditGetDetails(req)); }
    discoverMovieDiscover(req) { return this.proxy.invoke(t => t.discoverMovieDiscover(req)); }
    discoverTVDiscover(req) { return this.proxy.invoke(t => t.discoverTVDiscover(req)); }
    findFindbyID(req) { return this.proxy.invoke(t => t.findFindbyID(req)); }
    genreGetMovieList(req) { return this.proxy.invoke(t => t.genreGetMovieList(req)); }
    genreGetMovies(req) { return this.proxy.invoke(t => t.genreGetMovies(req)); }
    genreGetTVList(req) { return this.proxy.invoke(t => t.genreGetTVList(req)); }
    guest_sessionGetRatedMovies(req) { return this.proxy.invoke(t => t.guest_sessionGetRatedMovies(req)); }
    guest_sessionGetRatedTVEpisodes(req) { return this.proxy.invoke(t => t.guest_sessionGetRatedTVEpisodes(req)); }
    guest_sessionGetRatedTVShows(req) { return this.proxy.invoke(t => t.guest_sessionGetRatedTVShows(req)); }
    jobGetJobs(req) { return this.proxy.invoke(t => t.jobGetJobs(req)); }
    keywordGetDetails(req) { return this.proxy.invoke(t => t.keywordGetDetails(req)); }
    keywordGetMovies(req) { return this.proxy.invoke(t => t.keywordGetMovies(req)); }
    listAddMovie(req) { return this.proxy.invoke(t => t.listAddMovie(req)); }
    listCheckItemStatus(req) { return this.proxy.invoke(t => t.listCheckItemStatus(req)); }
    listClearList(req) { return this.proxy.invoke(t => t.listClearList(req)); }
    listCreateList(req) { return this.proxy.invoke(t => t.listCreateList(req)); }
    listGetDetails(req) { return this.proxy.invoke(t => t.listGetDetails(req)); }
    listRemoveMovie(req) { return this.proxy.invoke(t => t.listRemoveMovie(req)); }
    movieDeleteRating(req) { return this.proxy.invoke(t => t.movieDeleteRating(req)); }
    movieGetAccountStates(req) { return this.proxy.invoke(t => t.movieGetAccountStates(req)); }
    movieGetAlternativeTitles(req) { return this.proxy.invoke(t => t.movieGetAlternativeTitles(req)); }
    movieGetChanges(req) { return this.proxy.invoke(t => t.movieGetChanges(req)); }
    movieGetCredits(req) { return this.proxy.invoke(t => t.movieGetCredits(req)); }
    movieGetDetails(req) { return this.proxy.invoke(t => t.movieGetDetails(req)); }
    movieGetImages(req) { return this.proxy.invoke(t => t.movieGetImages(req)); }
    movieGetKeywords(req) { return this.proxy.invoke(t => t.movieGetKeywords(req)); }
    movieGetLatest(req) { return this.proxy.invoke(t => t.movieGetLatest(req)); }
    movieGetLists(req) { return this.proxy.invoke(t => t.movieGetLists(req)); }
    movieGetMovieChangeList(req) { return this.proxy.invoke(t => t.movieGetMovieChangeList(req)); }
    movieGetNowPlaying(req) { return this.proxy.invoke(t => t.movieGetNowPlaying(req)); }
    movieGetRecommendations(req) { return this.proxy.invoke(t => t.movieGetRecommendations(req)); }
    movieGetReleaseDates(req) { return this.proxy.invoke(t => t.movieGetReleaseDates(req)); }
    movieGetReviews(req) { return this.proxy.invoke(t => t.movieGetReviews(req)); }
    movieGetSimilarMovies(req) { return this.proxy.invoke(t => t.movieGetSimilarMovies(req)); }
    movieGetTopRated(req) { return this.proxy.invoke(t => t.movieGetTopRated(req)); }
    movieGetTranslations(req) { return this.proxy.invoke(t => t.movieGetTranslations(req)); }
    movieGetUpcoming(req) { return this.proxy.invoke(t => t.movieGetUpcoming(req)); }
    movieGetVideos(req) { return this.proxy.invoke(t => t.movieGetVideos(req)); }
    movieRateMovie(req) { return this.proxy.invoke(t => t.movieRateMovie(req)); }
    networkGetDetails(req) { return this.proxy.invoke(t => t.networkGetDetails(req)); }
    personGetChanges(req) { return this.proxy.invoke(t => t.personGetChanges(req)); }
    personGetCombinedCredits(req) { return this.proxy.invoke(t => t.personGetCombinedCredits(req)); }
    personGetDetails(req) { return this.proxy.invoke(t => t.personGetDetails(req)); }
    personGetExternalIDs(req) { return this.proxy.invoke(t => t.personGetExternalIDs(req)); }
    personGetImages(req) { return this.proxy.invoke(t => t.personGetImages(req)); }
    personGetLatest(req) { return this.proxy.invoke(t => t.personGetLatest(req)); }
    personGetMovieCredits(req) { return this.proxy.invoke(t => t.personGetMovieCredits(req)); }
    personGetPersonChangeList(req) { return this.proxy.invoke(t => t.personGetPersonChangeList(req)); }
    personGetPopular(req) { return this.proxy.invoke(t => t.personGetPopular(req)); }
    personGetTaggedImages(req) { return this.proxy.invoke(t => t.personGetTaggedImages(req)); }
    personGetTVCredits(req) { return this.proxy.invoke(t => t.personGetTVCredits(req)); }
    reviewGetDetails(req) { return this.proxy.invoke(t => t.reviewGetDetails(req)); }
    searchSearchCollections(req) { return this.proxy.invoke(t => t.searchSearchCollections(req)); }
    searchSearchCompanies(req) { return this.proxy.invoke(t => t.searchSearchCompanies(req)); }
    searchSearchKeywords(req) { return this.proxy.invoke(t => t.searchSearchKeywords(req)); }
    searchSearchPeople(req) { return this.proxy.invoke(t => t.searchSearchPeople(req)); }
    timezonesGetList(req) { return this.proxy.invoke(t => t.timezonesGetList(req)); }
    tvDeleteRating(req) { return this.proxy.invoke(t => t.tvDeleteRating(req)); }
    tvDeleteRating2(req) { return this.proxy.invoke(t => t.tvDeleteRating2(req)); }
    tvGetAccountStates(req) { return this.proxy.invoke(t => t.tvGetAccountStates(req)); }
    tvGetAccountStates2(req) { return this.proxy.invoke(t => t.tvGetAccountStates2(req)); }
    tvGetAccountStates3(req) { return this.proxy.invoke(t => t.tvGetAccountStates3(req)); }
    tvGetAlternativeTitles(req) { return this.proxy.invoke(t => t.tvGetAlternativeTitles(req)); }
    tvGetChanges(req) { return this.proxy.invoke(t => t.tvGetChanges(req)); }
    tvGetChanges2(req) { return this.proxy.invoke(t => t.tvGetChanges2(req)); }
    tvGetChanges3(req) { return this.proxy.invoke(t => t.tvGetChanges3(req)); }
    tvGetContentRatings(req) { return this.proxy.invoke(t => t.tvGetContentRatings(req)); }
    tvGetCredits(req) { return this.proxy.invoke(t => t.tvGetCredits(req)); }
    tvGetCredits2(req) { return this.proxy.invoke(t => t.tvGetCredits2(req)); }
    tvGetCredits3(req) { return this.proxy.invoke(t => t.tvGetCredits3(req)); }
    tvGetSeason(req) { return this.proxy.invoke(t => t.tvGetSeason(req)); }
    tvGetDetails3(req) { return this.proxy.invoke(t => t.tvGetDetails3(req)); }
    tvGetExternalIDs(req) { return this.proxy.invoke(t => t.tvGetExternalIDs(req)); }
    tvGetExternalIDs2(req) { return this.proxy.invoke(t => t.tvGetExternalIDs2(req)); }
    tvGetImages(req) { return this.proxy.invoke(t => t.tvGetImages(req)); }
    tvGetImages2(req) { return this.proxy.invoke(t => t.tvGetImages2(req)); }
    tvGetImages3(req) { return this.proxy.invoke(t => t.tvGetImages3(req)); }
    tvGetKeywords(req) { return this.proxy.invoke(t => t.tvGetKeywords(req)); }
    tvGetLatest(req) { return this.proxy.invoke(t => t.tvGetLatest(req)); }
    tvGetPopular(req) { return this.proxy.invoke(t => t.tvGetPopular(req)); }
    tvGetRecommendations(req) { return this.proxy.invoke(t => t.tvGetRecommendations(req)); }
    tvGetSimilarTVShows(req) { return this.proxy.invoke(t => t.tvGetSimilarTVShows(req)); }
    tvGetTopRated(req) { return this.proxy.invoke(t => t.tvGetTopRated(req)); }
    tvGetTranslations(req) { return this.proxy.invoke(t => t.tvGetTranslations(req)); }
    tvGetTVAiringToday(req) { return this.proxy.invoke(t => t.tvGetTVAiringToday(req)); }
    tvGetTVChangeList(req) { return this.proxy.invoke(t => t.tvGetTVChangeList(req)); }
    tvGetTVEpisodeExternalIDs(req) { return this.proxy.invoke(t => t.tvGetTVEpisodeExternalIDs(req)); }
    tvGetTVOnTheAir(req) { return this.proxy.invoke(t => t.tvGetTVOnTheAir(req)); }
    tvGetVideos(req) { return this.proxy.invoke(t => t.tvGetVideos(req)); }
    tvGetVideos2(req) { return this.proxy.invoke(t => t.tvGetVideos2(req)); }
    tvGetVideos3(req) { return this.proxy.invoke(t => t.tvGetVideos3(req)); }
    tvRateTVEpisode(req) { return this.proxy.invoke(t => t.tvRateTVEpisode(req)); }
    tvRateTVShow(req) { return this.proxy.invoke(t => t.tvRateTVShow(req)); }
}
exports.TmdbV3Client = TmdbV3Client;
//# sourceMappingURL=client.js.map